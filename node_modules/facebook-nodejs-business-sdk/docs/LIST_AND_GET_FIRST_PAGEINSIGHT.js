/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the
 * LICENSE file in the root directory of this source tree.
 * @flow
 */

const bizSdk = require('facebook-nodejs-business-sdk');
const process = require('process');
const User = bizSdk.User;
const Page = bizSdk.Page;
const InsightsResult = bizSdk.InsightsResult;

let app_id = '1224202007596125';
let access_token = 'EAARZAZA73LzF0BACZADSZCYwMsLHUTwAAYKm5Tciz5GZCGM8ZAtqoM12q8ybFt6dpElSqbUuXm77dGmZAeK6r1wygAQZCslDqpsVQY6RQA3WhLirP8BcgoKoCTvlyKzkx6xGPZCcRiDXUleDqSbnAQBd5k0ZBhuLf1AB2VsIS5OlYDoTQlOoRuVpmZAiJY9O6d688sZD';
let app_secret = '709348c9665c33a4f988ff3950098131';
let user_id = '10150023100686117';
const api = bizSdk.FacebookAdsApi.init(
  access_token,
  crash_log=false
);
const showDebugingInfo = true; // Setting this to true shows more debugging info.
if (showDebugingInfo) {
  api.setDebug(true);
}

const logApiCallResult = (apiCallName, data) => {
  console.log(apiCallName);
  if (showDebugingInfo) {
    console.log('Data:' + JSON.stringify(data));
  }
};
let fields, params;
void async function() {
try {
//  _DOC oncall [business_api]
//  _DOC open [LIST_PAGE_AND_MANAGE]
//  _DOC vars [access_token]
//  _DOC vars [user_id]

// First we try to get all pages from a user
fields = [
  'access_token',
];
params = {
};
let pages = await (new User(user_id)).getAccounts(
  fields,
  params
);
let page_id = pages[0].id;
console.log(pages[0].id);

// Then we get first page's insight using page access token
bizSdk.FacebookAdsApi.init(pages[0].access_token, crash_log=false);
fields = [
];
params = {
  'metric' : 'page_fan_adds',
};
let insights = await (new Page(page_id)).getInsights(
  fields,
  params
);

bizSdk.FacebookAdsApi.init(access_token, crash_log=false);
//  _DOC close [LIST_PAGE_AND_MANAGE]
}
catch(error) {
  console.log(error);
  process.exit(1);
}
}();
